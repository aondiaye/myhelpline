[Queue]
exten => _X.,1,NoOp()
 same => n,Queue(${QUEUENAME})
 same => n,Set(QUEUEXIT=${TOLOWER(${QUEUESTATUS})})	;'timeout','full','joinempty','leaveempty','joinunavail','leaveunavail','continue'
 same => n,GotoIf($["${QUEUEXIT}" ="continue"]?queuexitout:queuerror)
;********************************************************************************
 same => n(queuerror),NoOp(**Queue Error**)
 same => n,Set(COREDB=queuerror)
; same => n,GoSub(middleware,${EXTEN},1)
;********************************************************************************
 same => n(queuexitout),NoOp()
 same => n,Hangup()
;********************************************************************************
;    TIMEOUT FULL JOINEMPTY LEAVEEMPTY JOINUNAVAIL LEAVEUNAVAIL CONTINUE
;********************************************************************************

[queuesub]
exten => s,1,NoOp()
;********************************************************************************
 same => n(filtermemberinterface),NoOp()
 same => n,Set(MEMBER=${CUT(MEMBERINTERFACE,\/,2)})
 same => n,NoOp(**** MEMBER IS ${MEMBER} ****)
;********************************************************************************
 same => n(memberuserkey),NoOp()
 same => n,Set(MEMBERKEY=${MEMBER_GETKEY(${MEMBER})})

 same => n(memberid),NoOp()
 same => n,Set(USERID=${AGENT_GETID(${MEMBERKEY})})

;********************************************************************************
 same => n(agentname),NoOp()
 same => n,SET(AGENTNAME=${AGENT_GETNAME(${USERID})})
 same => n,NoOp(****** Agent Name ${AGENTNAME} *****)
;********************************************************************************
 same => n(agentstate),NoOp(**Set agent status**)
 same => n,NoOp(**** Update Agent State to on call ***)
 same => n,Set(AGENT_UPDATESTATE(${USERID})=OnCall)
;********************************************************************************
 same => n(queuecase),NoOp()
 same => n,NoOp(**** Update Case, set creator id ${CASEID} ***)
 same => n,Set(CASE_UPDATECREATOR(${CASEID})=${USERID})
 same => n,Verbose(1,ODBC_RESULT is ${OBDBC_RESULT})
;********************************************************************************
 same => n(cdr),NoOp()
 same => n,Set(UNIQUE=${CDR_GETUNIQUE(${CASEID})})
 same => n,NoOp(**** CDR Unique ${UNIQUE} ****)
;********************************************************************************
 same => n(cdrlog),NoOp()
 same => n,Set(CDR_UPDATELOG(${UNIQUE})=${USERID},${QEHOLDTIME})
 same => n,Verbose(1,ODBC_RESULT is ${OBDBC_RESULT})
;********************************************************************************
 same => n(reportlog),NoOp()
 same => n,Set(REPORT_UPDATEAGENT(${CASEID})=${MEMBERINTERFACE},${USERID})
 same => n,Verbose(1,ODBC_RESULT is ${OBDBC_RESULT})
;********************************************************************************
 same => n(queuesubexit),NoOp()
 same => n,NoOp(*** Queue Sub Exit ***)
 same => n,Set(RANDOM=${RAND(123456789,987654321)})
 same => n,Set(CALLFILE=/opt/asterisk/helpline/spool)
 same => n,System(echo "Channel: LOCAL/${RANDOM}@Track\\nContext: AgentTracker\\nExtension: ${RANDOM}\\nPriority: 1\\nSET: TRACKCHAN=${MEMBERINTERFACE}\\nSET: UNIQUE=${UNIQUE}\\nSET: AUTH=${MEMBER}\\nSET: TALKTIME=${EPOCH}\\nSET: HOLDTIME=${QUEUEHOLDTIME}" > /tmp/${RANDOM}.call)
 same => n,System(mv /tmp/${RANDOM}.call /var/spool/asterisk/outgoing)
;********************************************************************************

;********************************************************************************

 same => n(queuesubout),NoOp()
 same => n,Set(GOSUB_RESULT=CONTINUE)
 same => n,NoOp(***** Queue Sub ${GOSUB_RESULT} ****)
 same => n,Return()
;********************************************************************************
;
;********************************************************************************
